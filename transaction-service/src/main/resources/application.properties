#kafka.server=localhost:9092
#kafka.group.id=server.mygoup
server.port=8087

stripe.sercret-key=pk_test_51LyhseC8rqdIteMdueiHpwmIk4dyJZZwU3MGICZkMT3hfyLSFQQ1hsvKOd4a6PsKnAmLs9Q4HTpNXMmJ3KTLENk100Ns90Zeek
stripr.public-key=sk_test_51LyhseC8rqdIteMdLbjoCjO4si4b6AOOFuFcV3VPMSTA0RmIN2ABJFQAg8U6tDBD6LW7kCLRWNRz346RgF2AAa5500M2Iyws2d

spring.application.name=transaction-service

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8081/eureka

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:ru.sotn.transactionservice.model.PaymentDto



spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8888/auth/realms/online-shope-microservice-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8888/auth/realms/online-shope-microservice-realm/protocol/openid-connect/certs
service.order=order-service
#spring.kafka.template.default-topic=transactionTopic
#spring.kafka.consumer.group-id= transactionId
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=event:ru.sotn.transactionservice.model.OrderDto



scheduler.cron.expression=0 0 0/8 * * ?