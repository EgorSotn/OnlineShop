version: "3"
services:
  ## MySQL Docker Compose Config
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: westa852
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-catalog:
    container_name: postgres-catalog
    image: postgres
    environment:
      POSTGRES_DB: catalog-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: westa852
      PGDATA: /data/postgres
    volumes:
      - ./postgres-catalog:/data/postgres
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: unless-stopped


  ## Keycloak Config with Mysql database
  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres
    volumes:
      - ./postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8888:8080
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-postgres
  ##Zookeeper and kafka
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  broker:
    container_name: broker
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## SFTP Server
  sftp-server:
    container_name: sftp-server
    image: atmoz/sftp
    volumes:
      -   ../image/upload:/home/foo/upload
    ports:
      - "2222:22"
    command: foo:pass:1001

  ## Eureka Server
  eureka-dockerfile:
    image: egorsotnikov/eureka-dockerfile:latest
    container_name: eureka-dockerfile
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  gateway-dockerfile:
    image: egorsotnikov/gateway-dockerfile:latest
    container_name: gateway-dockerfile
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - eureka-dockerfile
      - keycloak

  ## Product-Service Docker Compose Config
  catalog-dockerfile:
    container_name: catalog-dockerfile
    image: egorsotnikov/catalog-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-catalog:5433/catalog-service
    depends_on:
      - postgres-catalog
      - eureka-dockerfile
      - gateway-dockerfile

  ## Order-Service Docker Compose Config
  order-dockerfile:
    container_name: order-dockerfile
    image: egorsotnikov/order-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/order-service
    depends_on:
      - postgres-order
      - eureka-dockerfile
      - gateway-dockerfile

  ## Transaction-Service Docker Compose Config
  transaction-dockerfile:
    container_name: transaction-dockerfile
    image: egorsotnikov/transaction-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - eureka-dockerfile
      - gateway-dockerfile

  ## Notification-Service Docker Compose Config
  notification-dockerfile:
    container_name: notification-dockerfile
    image: egorsotnikov/notification-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - eureka-dockerfile

  ## Image-Service Docker Compose Config
  image-dockerfile:
    container_name: image-dockerfile
    image: egorsotnikov/image-dockerfile:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - sftp-server
      - eureka-dockerfile
      - gateway-dockerfile

